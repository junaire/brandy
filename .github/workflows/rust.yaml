on:
  push:
    branches:
     - main
    paths:
     - '.github/workflows/rust.yaml'
     - 'brilirs/**/*.rs'
     - 'brilirs/**/*.toml'
     - 'brilift/**/*.rs'
     - 'brilift/**/*.toml'
     - 'bril-rs/**/*.rs'
     - 'bril-rs/**/*.toml'
     - 'bril-rs/**/*.lalrpop'
  pull_request:
    branches:
     - main
    paths:
     - '.github/workflows/rust.yaml'
     - 'brilirs/**/*.rs'
     - 'brilirs/**/*.toml'
     - 'brilift/**/*.rs'
     - 'brilift/**/*.toml'
     - 'bril-rs/**/*.rs'
     - 'bril-rs/**/*.toml'
     - 'bril-rs/**/*.lalrpop'

name: Workflow checks for rust code

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-code:
          - "cd bril-rs && make test TURNTARGS=-v"
          - "cd bril-rs && make features"
          - "cd brilirs && make test TURNTARGS=-v"
          - "cd brilirs && make benchmark TURNTARGS=-v"
          - "cd brilift && cargo build --release && make rt.o && make test TURNTARGS=-v"
          - "cd brilift && cargo build --release && make rt.o && make benchmark TURNTARGS=-v"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # This is for checking the powerset of bril-rs features compiles
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-hack
          version: latest
          # One can use the tool cache if compiling this takes to long. Using prebuilt binaries is a security concern... but I guess so is compiling/running code from the internet.
          #use-tool-cache: true

      - uses: actions/cache@v2
        with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip
      - uses: actions/setup-python@v2
        with:
            python-version: '3.10'

      - name: Install Flit
        run: pip install flit
      - name: Install Python tools
        run: cd bril-txt ; flit install --symlink

      - name: Install Turnt
        # run: pip install turnt  # Use instead if pip turnt version >= 1.7
        uses: actions/checkout@v2
        with:
          repository: cucapra/turnt
          path: './turnt'
      - name: Install Turnt part 2
        run: cd turnt ; flit install --symlink

      - name: Problem matcher
        run: echo '::add-matcher::.github/tap-matcher.json'

      - name: Run test
        run: ${{ matrix.test-code }}

  rust-ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path: ["brilirs/Cargo.toml", "bril-rs/Cargo.toml", "bril-rs/bril2json/Cargo.toml", "bril-rs/brild/Cargo.toml", "brilift/Cargo.toml"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path ${{ matrix.path }} --all-targets

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path ${{ matrix.path }} --all -- --check

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path ${{ matrix.path }} -- -D warnings

      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --manifest-path ${{ matrix.path }}
